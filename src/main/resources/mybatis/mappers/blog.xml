<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog">
	<!-- 회원가입 시 생성 -->
	<insert id="join" parameterType="BlogVo">
	<![CDATA[
		insert into blog
		values(#{id}, #{blogTitle}, #{logoFile})
	]]>
	</insert>
	
	<!-- 블로그 메인 -->
	<select id="getBlog" parameterType="String" resultType="map">
	<![CDATA[
		select	b.id,
				blogTitle,
				logoFile,
				userName
		from blog b, users u
		where b.id = u.id
		and b.id = #{value}
	]]>
	</select>
	
	<!-- 블로그 헤더 -->
	<select id="getHeader" parameterType="String" resultType="map">
	<![CDATA[
		select	id,
				blogTitle
		from blog
		where id = #{value}
	]]>
	</select>
	
	<!-- 블로그 로고 이름 가져오기 -->
	<select id="getLogoFile" parameterType="String" resultType="String">
	<![CDATA[
		select logoFile
		from blog
		where id = #{value}
	]]>
	</select>
	
	<!-- 블로그 정보 수정 -->
	<update id="modify" parameterType="BlogVo">
	<![CDATA[
		update	blog
		set		blogTitle = #{blogTitle},
				logoFile = #{logoFile}
		where id = #{id}
	]]>
	</update>
	
	<!-- 블로그 검색 리스트 가져오기 -->
	<select id="searchList" parameterType="map" resultType="map">
	<![CDATA[
		select logoFile, blogTitle, userName, b.id, to_char(joinDate, 'YYYY/MM/DD') JOINDATE
		from users u, blog b
		where u.id = b.id
		and (blogTitle like #{optTitle} or userName like #{optName})
		order by joinDate desc
	]]>
	</select>
	
	<!-- 블로그 검색 리스트 페이지별로 가져오기 -->
	<select id="searchPageList" parameterType="map" resultType="map">
	<![CDATA[
		select rownum rn, logoFile, blogTitle, userName, id, JOINDATE
		from (select rownum rn, logoFile, blogTitle, userName, id, JOINDATE
		from (select logoFile, blogTitle, userName, b.id, to_char(joinDate, 'YYYY/MM/DD') JOINDATE
		from users u, blog b
		where u.id = b.id
		and (blogTitle like #{optTitle} or userName like #{optName})
		order by joinDate desc))
		where rn >= #{start}
		and rn <= #{end}
	]]>
	</select>
	
	<!-- 블로그 최대 횟수 가져오기 -->
	<select id="getSearchCount" parameterType="map" resultType="int">
		select count(*)
		from users u, blog b
		where u.id = b.id
		and (blogTitle like #{optTitle} or userName like #{optName})
	</select>
</mapper>